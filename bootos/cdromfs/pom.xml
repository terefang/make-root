<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>parent</artifactId>
        <groupId>terefang.makeroot</groupId>
        <version>2021.1.0</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>terefang.makeroot.bootos</groupId>
    <artifactId>cdromfs</artifactId>
    <packaging>pom</packaging>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <inherited>false</inherited>
                <dependencies>
                    <dependency>
                        <groupId>org.redline-rpm</groupId>
                        <artifactId>redline</artifactId>
                        <version>1.2.9</version>
                        <classifier>jar-with-dependencies</classifier>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-compress</artifactId>
                        <version>1.5</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>ant</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target xmlns:cmp="antlib:org.apache.ant.compress" >
                                <taskdef classname="org.redline_rpm.ant.RedlineTask" name="xrpm" />
                                <taskdef classname="org.apache.ant.compress.taskdefs.Cpio" name="cpio" />
                                <taskdef classname="org.apache.ant.compress.taskdefs.Uncpio" name="uncpio" />

                                <mkdir dir="${rpm.path}"/>
                                <mkdir dir="${rpm.path}/isofs"/>
                                <mkdir dir="${rpm.path}/initfs/usr"/>
                                <mkdir dir="${rpm.path}/usrfs/usr"/>

                                <exec dir="${rpm.path}/usrfs/usr" executable="tar" input="${resources.target}/muslsys-netbsd-curses-${version.netbsd-curses}.tgz">
                                    <arg line="-xvf - share/terminfo/l"/>
                                </exec>

                                <exec dir="${rpm.path}/usrfs/" executable="find" output="${rpm.path}/usrfs.list">
                                    <arg line=". -type d -print -depth"/>
                                </exec>
                                <exec dir="${rpm.path}/usrfs/" executable="find" output="${rpm.path}/usrfs.list" append="true">
                                    <arg line=". -type f -print -depth"/>
                                </exec>

                                <exec dir="${rpm.path}/usrfs/" executable="cpio" input="${rpm.path}/usrfs.list">
                                    <arg line="-R 0:0 -v -H newc -o -O ${rpm.path}/initfs/usr.cpio"/>
                                </exec>

                                <exec dir="${rpm.path}/initfs/" executable="cpio" input="${rpm.path}/bootos-busybox.cpio">
                                    <arg line="-id"/>
                                </exec>
                                <exec dir="${rpm.path}/initfs/" executable="cpio" input="${rpm.path}/bootos-toybox.cpio">
                                    <arg line="-id"/>
                                </exec>
                                <exec dir="${rpm.path}/initfs/" executable="cpio" input="${rpm.path}/bootos-dialog.cpio">
                                    <arg line="-id"/>
                                </exec>
                                <exec dir="${rpm.path}/initfs/" executable="cpio" input="${rpm.path}/bootos-e2fsprogs.cpio">
                                    <arg line="-id"/>
                                </exec>
                                <exec dir="${rpm.path}/initfs/" executable="cpio" input="${rpm.path}/bootos-gfdisk.cpio">
                                    <arg line="-id"/>
                                </exec>
                                <exec dir="${rpm.path}/initfs/" executable="cpio" input="${rpm.path}/bootos-initrd-iso.cpio">
                                    <arg line="-id"/>
                                </exec>

                                <copy file="${rpm.path}/initfs/bin/busybox" tofile="${rpm.path}/initfs/bin/sh"  overwrite="true"/>

                                <exec dir="${rpm.path}/initfs/" executable="find" output="${rpm.path}/initfs.list">
                                    <arg line=". -type d,b,c -print -depth"/>
                                </exec>
                                <exec dir="${rpm.path}/initfs/" executable="find" output="${rpm.path}/initfs.list" append="true">
                                    <arg line=". -type f -print -depth"/>
                                </exec>
                                <exec dir="${rpm.path}/initfs/" executable="find" output="${rpm.path}/initfs.list" append="true">
                                    <arg line=". -type l -print -depth"/>
                                </exec>

                                <exec dir="${rpm.path}/initfs/" executable="xargs" >
                                    <arg line="-a ${rpm.path}/initfs.list chmod +x "/>
                                </exec>

                                <exec dir="${rpm.path}/initfs/" executable="cpio" input="${rpm.path}/initfs.list">
                                    <arg line="-R 0:0 -v -H newc -o -O ${rpm.path}/isofs/initrd-iso.cpio"/>
                                </exec>

                                <exec dir="${rpm.path}/isofs/" executable="gzip">
                                    <arg line="-9 initrd-iso.cpio"/>
                                </exec>

                                <exec dir="${rpm.path}/isofs/" executable="cpio" input="${rpm.path}/bootos-syslinux.cpio">
                                    <arg line="-id"/>
                                </exec>
                                <chmod perm="555" file="${rpm.path}/isofs/syslinux/syslinux-nomtools" />

                                <copy file="src/main/dist/syslinux.cfg" tofile="${rpm.path}/isofs/syslinux.cfg"  overwrite="true"/>
                                <copy file="src/main/dist/syslinux.cfg" tofile="${rpm.path}/isofs/EFI/BOOT/syslinux.cfg"  overwrite="true"/>
                                <copy file="${rpm.path}/bzImage" tofile="${rpm.path}/isofs/bzImage" overwrite="true"/>

                                <mkdir dir="${rpm.path}/initiny"/>
                                <exec dir="${rpm.path}/initiny" executable="cpio" input="${rpm.path}/bootos-busybox.cpio">
                                    <arg line="-id"/>
                                </exec>
                                <copy file="${rpm.path}/initiny/bin/busybox" tofile="${rpm.path}/initiny/bin/sh"  overwrite="true"/>
                                <exec dir="${rpm.path}/initiny" executable="cpio" input="${rpm.path}/bootos-toybox.cpio">
                                    <arg line="-id"/>
                                </exec>
                                <exec dir="${rpm.path}/initiny" executable="cpio" input="${rpm.path}/bootos-init-tiny.cpio">
                                    <arg line="-id"/>
                                </exec>
                                <exec dir="${rpm.path}/initiny" executable="find" output="${rpm.path}/tiny.list">
                                    <arg line=". -type d,b,c -print -depth"/>
                                </exec>
                                <exec dir="${rpm.path}/initiny" executable="find" output="${rpm.path}/tiny.list" append="true">
                                    <arg line=". -type f -print -depth"/>
                                </exec>
                                <exec dir="${rpm.path}/initiny" executable="find" output="${rpm.path}/tiny.list" append="true">
                                    <arg line=". -type l -print -depth"/>
                                </exec>
                                <exec dir="${rpm.path}/initiny" executable="xargs" >
                                    <arg line="-a ${rpm.path}/tiny.list chmod +x "/>
                                </exec>
                                <exec dir="${rpm.path}/initiny" executable="cpio" input="${rpm.path}/tiny.list">
                                    <arg line="-R 0:0 -v -H newc -o -O ${rpm.path}/isofs/initrd-tiny.cpio"/>
                                </exec>
                                <exec dir="${rpm.path}/isofs/" executable="gzip">
                                    <arg line="-9 initrd-tiny.cpio"/>
                                </exec>

                                <mkdir dir="${rpm.path}/isofs/rpms"/>
                                <copy todir="${rpm.path}/isofs/rpms">
                                    <fileset dir="${rpm.path}">
                                        <include name="baseos-*.rpm" />
                                        <include name="fake-*.rpm" />
                                    </fileset>
                                </copy>

                                <echo file="${rpm.path}/isofs/VERSION">${project.version}</echo>
                                <echo file="${rpm.path}/isofs/BUILD">${buildNumber}</echo>
                                <echo file="${rpm.path}/isofs/STAMP">${timestamp}</echo>

                                <exec dir="${rpm.path}/" executable="xorriso">
                                    <arg value="-as" />
                                    <arg value="mkisofs" />
                                    <arg value="-o" />
                                    <arg value="./appliance-${project.version}.iso" />
                                    <arg value="-c" />
                                    <arg value="syslinux/boot.cat" />
                                    <arg value="-r" />
                                    <arg value="-D" />
                                    <arg value="-V" />
                                    <arg value="Q42ISOFS" />
                                    <arg value="-cache-inodes" />
                                    <arg value="-J" />
                                    <arg value="-l" />
                                    <arg value="-b" />
                                    <arg value="syslinux/isolinux.bin" />
                                    <arg value="-no-emul-boot" />
                                    <arg value="-boot-load-size" />
                                    <arg value="4" />
                                    <arg value="-boot-info-table" />
                                    <arg value="./isofs/" />
                                </exec>
<!--

cd $TROOT/ && xorriso -as mkisofs \
    -o $TROOT/output.iso \
    -c syslinux/boot.cat \
    -r -D -V "Q42ISOFS" -cache-inodes -J -l \
    -b syslinux/isolinux.bin \
	-no-emul-boot -boot-load-size 4 -boot-info-table \
    $CROOT/ $BROOT/

-->
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>