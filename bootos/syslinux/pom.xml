<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>parent</artifactId>
        <groupId>terefang.makeroot</groupId>
        <version>2021.1.0</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>terefang.makeroot.bootos</groupId>
    <artifactId>syslinux</artifactId>
    <version>6.3</version>
    <packaging>pom</packaging>

    <properties>
        <syslinux.tag>syslinux-6.03</syslinux.tag>
        <syslinux.archive>${syslinux.tag}.tar.gz</syslinux.archive>
        <syslinux.url>https://www.zytor.com/pub/syslinux/${syslinux.archive}</syslinux.url>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <inherited>false</inherited>
                <dependencies>
                    <dependency>
                        <groupId>org.redline-rpm</groupId>
                        <artifactId>redline</artifactId>
                        <version>1.2.9</version>
                        <classifier>jar-with-dependencies</classifier>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-compress</artifactId>
                        <version>1.5</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>ant</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                                <taskdef classname="org.redline_rpm.ant.RedlineTask" name="xrpm" />
                                <taskdef classname="org.apache.ant.compress.taskdefs.Cpio" name="cpio" />

                                <mkdir dir="${rpm.path}"/>
                                <mkdir dir="${project.build.directory}/syslinux"/>

                                <condition property="archive.exists">
                                    <resourceexists>
                                        <file file="${project.basedir}/src/main/dist/${syslinux.archive}"/>
                                    </resourceexists>
                                </condition>

                                <condition property="bios.exists">
                                    <resourceexists>
                                        <file file="${project.basedir}/src/main/dist/xbin-bios/isolinux.bin"/>
                                    </resourceexists>
                                </condition>

                                <condition property="efi.exists">
                                    <resourceexists>
                                        <file file="${project.basedir}/src/main/dist/xbin-efi/BOOTX64.EFI"/>
                                    </resourceexists>
                                </condition>

                                <mkdir unless:true="${archive.exists}" dir="${project.basedir}/src/main/dist"/>
                                <get unless:true="${archive.exists}" src="${syslinux.url}" dest="${project.basedir}/src/main/dist/${syslinux.archive}"/>
                                <exec unless:true="${efi.exists}" dir="${project.build.directory}/syslinux" executable="tar">
                                    <arg line="-xvf ${project.basedir}/src/main/dist/${syslinux.archive}" />
                                </exec>

                                <mkdir unless:true="${bios.exists}" dir="${project.basedir}/src/main/dist/xbin-bios/"/>
                                <copy unless:true="${bios.exists}" todir="${project.basedir}/src/main/dist/xbin-bios/" flatten="true">
                                    <fileset dir="${project.build.directory}/syslinux/${syslinux.tag}/bios">
                                        <include name="**/*.c32" />
                                        <include name="mbr/*.bin" />
                                        <include name="*/isolinux.bin" />
                                    </fileset>
                                </copy>

                                <exec unless:true="${bios.exists}" dir="${project.build.directory}/syslinux/${syslinux.tag}" executable="make">
                                    <arg line="-j 8 LDFLAGS='--static -N' firmware=bios clean" />
                                </exec>
                                <exec unless:true="${bios.exists}" dir="${project.build.directory}/syslinux/${syslinux.tag}" executable="make">
                                    <arg line="-j 8 LDFLAGS='--static -N' firmware=bios installer" />
                                </exec>
                                <copy unless:true="${bios.exists}" todir="${project.basedir}/src/main/dist/xbin-bios/" flatten="true">
                                    <fileset dir="${project.build.directory}/syslinux/${syslinux.tag}/bios">
                                        <include name="**/syslinux-nomtools" />
                                        <include name="core/ldlinux.*" />
                                    </fileset>
                                </copy>

                                <mkdir dir="${project.build.directory}/bootos/syslinux"/>
                                <copy todir="${project.build.directory}/bootos/syslinux" flatten="true">
                                    <fileset dir="${project.basedir}/src/main/dist/xbin-bios/">
                                        <include name="*" />
                                    </fileset>
                                </copy>

                                <mkdir unless:true="${efi.exists}" dir="${project.basedir}/src/main/dist/xbin-efi/"/>
                                <copy unless:true="${efi.exists}" file="${project.build.directory}/syslinux/${syslinux.tag}/efi64/efi/syslinux.efi" tofile="${project.basedir}/src/main/dist/xbin-efi/BOOTX64.EFI" />
                                <copy unless:true="${efi.exists}" file="${project.build.directory}/syslinux/${syslinux.tag}/efi64/com32/elflink/ldlinux/ldlinux.e64" todir="${project.basedir}/src/main/dist/xbin-efi/"/>
                                <copy unless:true="${efi.exists}" todir="${project.basedir}/src/main/dist/xbin-efi/" flatten="true">
                                    <fileset dir="${project.build.directory}/syslinux/${syslinux.tag}/efi64">
                                        <include name="**/*.c32" />
                                    </fileset>
                                </copy>

                                <copy file="${project.basedir}/src/main/dist/ter-116n.psf" todir="${project.build.directory}/bootos/"/>
                                <copy file="${project.basedir}/src/main/dist/ter-i16n.psf" todir="${project.build.directory}/bootos/"/>
                                <copy file="${project.basedir}/src/main/dist/ter-v16n.psf" todir="${project.build.directory}/bootos/"/>
                                <mkdir dir="${project.build.directory}/bootos/EFI/BOOT"/>
                                <copy todir="${project.build.directory}/bootos/EFI/BOOT" flatten="true">
                                    <fileset dir="${project.basedir}/src/main/dist/xbin-efi/">
                                        <include name="*" />
                                    </fileset>
                                </copy>

                                <exec dir="${project.build.directory}/bootos" executable="find" output="${project.build.directory}/syslinux.list">
                                    <arg line=". -type f -print -depth"/>
                                </exec>
                                <mkdir dir="${rpm.path}/isofs/"/>
                                <exec dir="${project.build.directory}/bootos" executable="cpio" input="${project.build.directory}/syslinux.list">
                                    <arg line="-R 0:0 -v -H newc -o -O ../bootos-syslinux.cpio"/>
                                </exec>
                                <copy file="${project.build.directory}/bootos-syslinux.cpio" tofile="${rpm.path}/bootos-syslinux.cpio" />
                                <copy file="${project.build.directory}/bootos-syslinux.cpio" tofile="${rpm.path}/isofs/syslinux.cpio" />
                                <exec dir="${rpm.path}/isofs/" executable="gzip">
                                    <arg line="-9 syslinux.cpio"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>