<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>parent</artifactId>
        <groupId>terefang.makeroot</groupId>
        <version>2021.1.0</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>terefang.makeroot.module-statis</groupId>
    <artifactId>initrd-gfdisk</artifactId>
    <version>1.0.6</version>
    <packaging>pom</packaging>

    <properties>
        <gfdisk.tag>gptfdisk-${project.version}</gfdisk.tag>
        <gfdisk.archive>${gfdisk.tag}.tar.gz</gfdisk.archive>
        <gfdisk.url>https://www.rodsbooks.com/gdisk/${gfdisk.archive}</gfdisk.url>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <inherited>false</inherited>
                <dependencies>
                    <dependency>
                        <groupId>org.redline-rpm</groupId>
                        <artifactId>redline</artifactId>
                        <version>1.2.9</version>
                        <classifier>jar-with-dependencies</classifier>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-compress</artifactId>
                        <version>1.5</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>ant</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                                <taskdef classname="org.redline_rpm.ant.RedlineTask" name="xrpm" />
                                <taskdef classname="org.apache.ant.compress.taskdefs.Cpio" name="cpio" />

                                <mkdir dir="${rpm.path}"/>
                                <mkdir dir="${project.build.directory}/gfdisk/${gfdisk.tag}"/>

                                <condition property="archive.exists">
                                    <resourceexists>
                                        <file file="${project.basedir}/src/main/dist/${gfdisk.archive}"/>
                                    </resourceexists>
                                </condition>

                                <condition property="binary.exists">
                                    <resourceexists>
                                        <file file="${project.basedir}/src/main/dist/bin/sgdisk"/>
                                    </resourceexists>
                                </condition>

                                <mkdir unless:true="${archive.exists}" dir="${project.basedir}/src/main/dist"/>
                                <get unless:true="${archive.exists}" src="${gfdisk.url}" dest="${project.basedir}/src/main/dist/${gfdisk.archive}"/>

                                <exec unless:true="${binary.exists}" dir="${project.build.directory}/gfdisk/${gfdisk.tag}" executable="tar">
                                    <arg line="-xvf ${project.basedir}/src/main/dist/${gfdisk.archive} --strip 1" />
                                </exec>

                                <exec unless:true="${binary.exists}" dir="${project.build.directory}/gfdisk/${gfdisk.tag}" executable="make">
                                    <arg line="CFLAGS=-static LDFLAGS=-static gdisk sgdisk"/>
                                </exec>

                                <mkdir unless:true="${binary.exists}" dir="${project.basedir}/src/main/dist/bin"/>
                                <copy unless:true="${binary.exists}" todir="${project.basedir}/src/main/dist/bin" flatten="true">
                                    <fileset dir="${project.build.directory}/gfdisk/${gfdisk.tag}">
                                        <include name="gdisk" />
                                        <include name="sgdisk" />
                                    </fileset>
                                </copy>
                                <exec unless:true="${final.exists}" dir="${project.basedir}/src/main/dist/bin" executable="chmod" >
                                    <arg line=" +x sgdisk gdisk " />
                                </exec>
                                <exec unless:true="${final.exists}" dir="${project.basedir}/src/main/dist" executable="bsdtar" >
                                    <arg line=" --null --uid 0 --gid 0 --format=newc -cvf ${project.basedir}/src/main/dist/gfdisk.cpio bin/gdisk bin/sgdisk" />
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>