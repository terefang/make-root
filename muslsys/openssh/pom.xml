<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>parent</artifactId>
        <groupId>terefang.makeroot</groupId>
        <version>2021.1.0</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>terefang.makeroot.muslsys</groupId>
    <artifactId>openssh</artifactId>
    <version>${version.openssh}</version>
    <packaging>pom</packaging>

    <properties>
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>yyyyMMdd</maven.build.timestamp.format>

        <prg.archive>${project.artifactId}-${project.version}.tar.gz</prg.archive>
        <prg.tag>${project.artifactId}-${project.version}</prg.tag>
        <prg.url>http://cloudflare.cdn.openbsd.org/pub/OpenBSD/OpenSSH/portable/${prg.archive}</prg.url>
    </properties>

    <!-- 7.7p1 7.8p1 7.9p1 8.7p1 8.8p1 8.9p1 9.5p1 -->

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <inherited>false</inherited>
                <dependencies>
                    <dependency>
                        <groupId>org.redline-rpm</groupId>
                        <artifactId>redline</artifactId>
                        <version>1.2.9</version>
                        <classifier>jar-with-dependencies</classifier>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-compress</artifactId>
                        <version>1.5</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>ant</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                                <taskdef classname="org.redline_rpm.ant.RedlineTask" name="xrpm" />
                                <taskdef classname="org.apache.ant.compress.taskdefs.Cpio" name="cpio" />

                                <mkdir dir="${root.dir}"/>
                                <mkdir dir="${toolchain.dir}"/>
                                <mkdir dir="${project.basedir}/src/main/dist"/>
                                <mkdir dir="${project.build.directory}/${project.artifactId}/${prg.tag}"/>
                                <mkdir dir="${resources.target}"/>

                                <condition property="archive.exists">
                                    <resourceexists>
                                        <file file="${project.basedir}/src/main/dist/${prg.archive}"/>
                                    </resourceexists>
                                </condition>

                                <condition property="final.exists">
                                    <resourceexists>
                                        <file file="${resources.target}/muslsys-${prg.tag}.tgz"/>
                                    </resourceexists>
                                </condition>

                                <exec unless:true="${final.exists}" dir="${toolchain.dir}" executable="tar">
                                    <arg line="-xvf ${resources.target}/gcc-10-x86_64-linux-musl-native.tar.gz" />
                                </exec>
                                <exec unless:true="${final.exists}" dir="${toolchain.dir}" executable="tar">
                                    <arg line="-xvf ${resources.target}/muslsys-libxcrypt-${version.libxcrypt}.tgz" />
                                </exec>
                                <exec unless:true="${final.exists}" dir="${toolchain.dir}" executable="tar">
                                    <arg line="-xvf ${resources.target}/muslsys-zlib-${version.zlib}.tgz" />
                                </exec>
                                <exec unless:true="${final.exists}" dir="${toolchain.dir}" executable="tar">
                                    <arg line="-xvf ${resources.target}/muslsys-libressl-${version.libressl}-lib.tgz" />
                                </exec>
                                <exec unless:true="${final.exists}" dir="${toolchain.dir}" executable="tar">
                                    <arg line="-xvf ${resources.target}/muslsys-libmd-${version.libmd}.tgz" />
                                </exec>
                                <delete unless:true="${final.exists}">
                                    <fileset dir="${toolchain.dir}" includes="usr/lib/*.la"/>
                                    <fileset dir="${toolchain.dir}" includes="usr/lib/*.so*"/>
                                    <fileset dir="${toolchain.dir}" includes="usr/lib/pkgconfig/*"/>
                                </delete>

                                <get unless:true="${archive.exists}" src="${prg.url}" dest="${project.basedir}/src/main/dist/${prg.archive}"/>

                                <exec unless:true="${final.exists}" dir="${project.build.directory}/${project.artifactId}/${prg.tag}" executable="tar">
                                    <arg line="-xvf ${project.basedir}/src/main/dist/${prg.archive} --strip 1" />
                                </exec>

                                <exec unless:true="${final.exists}" dir="${project.build.directory}/${project.artifactId}/${prg.tag}" executable="configure" resolveexecutable="true">
                                    <env key="PATH" value="${env.PATH}:${toolchain.dir}/bin" />
                                    <env key="CFLAGS" value="-static --static" />
                                    <env key="LDFLAGS" value="-static --static" />
                                    <env key="LIBS" value=" -lmd" />
                                    <env key="PKGCONFIG" value="/bin/false" />
                                    <arg value="--prefix=/usr/libexec/toolbox/${project.artifactId}" />
                                    <arg value="--host=x86_64-linux-musl" />
                                    <arg value="--target=x86_64-linux-musl" />
                                    <arg value="--without-rpath" />
                                    <arg value="--with-pie" />
                                    <arg value="--bindir=/usr/libexec/${project.artifactId}/bin" />
                                    <arg value="--sbindir=/usr/libexec/${project.artifactId}/sbin" />
                                    <arg value="--libexecdir=/usr/libexec/${project.artifactId}/libexec" />
                                    <arg value="--sysconfdir=/usr/libexec/${project.artifactId}/etc" />
                                    <arg value="--sharedstatedir=/var/opt/${project.artifactId}/com" />
                                    <arg value="--localstatedir=/var/opt/${project.artifactId}" />
                                    <arg value="--runstatedir=/var/opt/${project.artifactId}/run" />
                                    <arg value="--libdir=/usr/libexec/${project.artifactId}/lib" />
                                    <arg value="--includedir=/usr/libexec/${project.artifactId}/include" />
                                    <arg value="--oldincludedir=/usr/libexec/${project.artifactId}/include" />
                                    <arg value="--datarootdir=/usr/libexec/${project.artifactId}/share" />
                                </exec>

                                <exec unless:true="${final.exists}" dir="${project.build.directory}/${project.artifactId}/${prg.tag}" executable="make">
                                    <env key="PATH" value="${env.PATH}:${toolchain.dir}/bin" />
                                    <arg line="-j 8 check" />
                                </exec>

                                <exec unless:true="${final.exists}" dir="${project.build.directory}/${project.artifactId}/${prg.tag}" executable="make">
                                    <env key="PATH" value="${env.PATH}:${toolchain.dir}/bin" />
                                    <arg line="-j 1 DESTDIR=${root.dir}  install-nokeys" />
                                </exec>

                                <exec unless:true="${final.exists}" dir="${root.dir}/usr/libexec/${project.artifactId}" executable="tar">
                                    <arg line="-cvf ${resources.target}/muslsys-${prg.tag}.tgz bin share" />
                                </exec>


                                <xrpm
                                        architecture="X86_64"
                                        destination="${project.build.directory}"
                                        license="BSD"
                                        group="toolbox"
                                        name="toolbox-${project.artifactId}"
                                        summary="openssh"
                                        distribution="nos"
                                        packager="nos"
                                        url="https://www.openssh.com//"
                                        vendor="nos"
                                        epoch="${buildNumber}"
                                        release="${buildNumber}.${timestamp}"
                                        version="${project.version}">

                                    <rpmfileset prefix="/usr/libexec/${project.artifactId}/bin" filemode='555' dir="${root.dir}/usr/libexec/${project.artifactId}/bin" username="root" group="root" addParents="false" />
                                    <rpmfileset prefix="/usr/libexec/${project.artifactId}/sbin" filemode='555' dir="${root.dir}/usr/libexec/${project.artifactId}/sbin" username="root" group="root" addParents="false" />
                                    <link path="/usr/libexec/toolbox/xbin/ssh"          target="/usr/libexec/${project.artifactId}/bin/ssh" />
                                    <link path="/usr/libexec/toolbox/xbin/scp"          target="/usr/libexec/${project.artifactId}/bin/scp" />
                                    <link path="/usr/libexec/toolbox/xbin/sftp"         target="/usr/libexec/${project.artifactId}/bin/sftp" />
                                    <link path="/usr/libexec/toolbox/xbin/ssh-keygen"   target="/usr/libexec/${project.artifactId}/bin/ssh-keygen" />
                                </xrpm>

                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>