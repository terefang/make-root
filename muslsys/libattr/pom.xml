<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>parent</artifactId>
        <groupId>terefang.makeroot</groupId>
        <version>2021.1.0</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>terefang.makeroot.muslsys</groupId>
    <artifactId>libattr</artifactId>
    <version>2.5.1</version>
    <packaging>pom</packaging>

    <properties>
        <libattr.archive>${project.artifactId}-${project.version}.tar.gz</libattr.archive>
        <libattr.tag>${project.artifactId}-${project.version}</libattr.tag>
        <libattr.url>http://download.savannah.nongnu.org/releases/attr/attr-${project.version}.tar.gz</libattr.url>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <inherited>false</inherited>
                <dependencies>
                    <dependency>
                        <groupId>org.redline-rpm</groupId>
                        <artifactId>redline</artifactId>
                        <version>1.2.9</version>
                        <classifier>jar-with-dependencies</classifier>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-compress</artifactId>
                        <version>1.5</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>ant</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                                <taskdef classname="org.redline_rpm.ant.RedlineTask" name="xrpm" />
                                <taskdef classname="org.apache.ant.compress.taskdefs.Cpio" name="cpio" />

                                <mkdir dir="${root.dir}"/>
                                <mkdir dir="${toolchain.dir}"/>
                                <mkdir dir="${project.basedir}/src/main/dist"/>
                                <mkdir dir="${resources.target}"/>
                                <mkdir dir="${project.build.directory}/${project.artifactId}/${libattr.tag}"/>


                                <condition property="archive.exists">
                                    <resourceexists>
                                        <file file="${project.basedir}/src/main/dist/${libattr.archive}"/>
                                    </resourceexists>
                                </condition>
                                <condition property="final.exists">
                                    <resourceexists>
                                        <file file="${resources.target}/muslsys-${libattr.tag}.tgz"/>
                                    </resourceexists>
                                </condition>

                                <exec unless:true="${final.exists}" dir="${toolchain.dir}" executable="tar">
                                    <arg line="-xvf ${resources.target}/gcc-10-x86_64-linux-musl-native.tar.gz" />
                                </exec>

                                <get unless:true="${archive.exists}" src="${libattr.url}" dest="${project.basedir}/src/main/dist/${libattr.archive}"/>

                                <exec unless:true="${finalng.exists}" dir="${toolchain.dir}" executable="tar">
                                    <arg line="-xvf ${resources.target}/gcc-10-x86_64-linux-musl-native.tar.gz" />
                                </exec>

                                <exec unless:true="${final.exists}" dir="${project.build.directory}/${project.artifactId}/${libattr.tag}" executable="tar">
                                    <arg line="-xvf ${project.basedir}/src/main/dist/${libattr.archive} --strip 1" />
                                </exec>

                                <exec unless:true="${final.exists}" dir="${project.build.directory}/${project.artifactId}/${libattr.tag}" executable="configure" resolveexecutable="true">
                                    <env key="PATH" value="${env.PATH}:${toolchain.dir}/bin" />

                                    <arg value="--prefix=/usr" />
                                    <arg value="--host=x86_64-linux-musl" />
                                    <arg value="--target=x86_64-linux-musl" />
                                    <arg value="--disable-rpath" />
                                    <arg value="--disable-nls" />
                                </exec>

                                <exec unless:true="${final.exists}" dir="${project.build.directory}/${project.artifactId}/${libattr.tag}" executable="make">
                                    <env key="PATH" value="${env.PATH}:${toolchain.dir}/bin" />
                                    <arg line="-j 8" />
                                </exec>

                                <exec unless:true="${final.exists}" dir="${project.build.directory}/${project.artifactId}/${libattr.tag}" executable="make">
                                    <env key="PATH" value="${env.PATH}:${toolchain.dir}/bin" />
                                    <arg line="-j 1 DESTDIR=${root.dir} install" />
                                </exec>

                                <exec unless:true="${final.exists}" dir="${root.dir}/usr" executable="tar">
                                    <arg line="-cvf ${resources.target}/muslsys-${libattr.tag}.tgz bin etc include lib" />
                                </exec>

                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>