<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>parent</artifactId>
        <groupId>terefang.makeroot</groupId>
        <version>2021.1.0</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>terefang.makeroot.muslsys</groupId>
    <artifactId>tinycc</artifactId>
    <version>${version.tinycc}</version>
    <packaging>pom</packaging>

    <properties>
        <pkg.url>https://repo.or.cz/tinycc.git/snapshot/e5eedc0cda88bd067ab52d13f84dead19998b127.tar.gz</pkg.url>
        <pkg.tag>${project.artifactId}-${project.version}</pkg.tag>
        <pkg.archive>${pkg.tag}.tar.gz</pkg.archive>
        <pkg.dist>${project.basedir}/src/main/dist/${pkg.archive}</pkg.dist>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <inherited>false</inherited>
                <dependencies>
                    <dependency>
                        <groupId>org.redline-rpm</groupId>
                        <artifactId>redline</artifactId>
                        <version>1.2.9</version>
                        <classifier>jar-with-dependencies</classifier>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-compress</artifactId>
                        <version>1.5</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>ant</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                                <taskdef classname="org.redline_rpm.ant.RedlineTask" name="xrpm" />
                                <taskdef classname="org.apache.ant.compress.taskdefs.Cpio" name="cpio" />

                                <mkdir dir="${root.dir}"/>
                                <mkdir dir="${toolchain.dir}"/>
                                <mkdir dir="${project.basedir}/src/main/dist"/>
                                <mkdir dir="${project.build.directory}/${project.artifactId}/${pkg.tag}"/>
                                <mkdir dir="${resources.target}"/>

                                <condition property="archive.exists">
                                    <resourceexists>
                                        <file file="${project.basedir}/src/main/dist/${pkg.archive}"/>
                                    </resourceexists>
                                </condition>

                                <condition property="final.exists">
                                    <resourceexists>
                                        <file file="${resources.target}/muslsys-${pkg.tag}.tgz"/>
                                    </resourceexists>
                                </condition>

                                <exec unless:true="${final.exists}" dir="${toolchain.dir}" executable="tar">
                                    <arg line="-xvf ${resources.target}/gcc-10-x86_64-linux-musl-native.tar.gz" />
                                </exec>

                                <exec unless:true="${final.exists}" dir="${toolchain.dir}" executable="tar">
                                    <arg line="-xvf ${resources.target}/muslsys-zlib-${version.zlib}.tgz" />
                                </exec>

                                <get unless:true="${archive.exists}" src="${pkg.url}" dest="${pkg.dist}"/>

                                <exec dir="${project.build.directory}/${project.artifactId}/${pkg.tag}" executable="tar">
                                    <arg line="-xvf ${pkg.dist} --strip 1" />
                                </exec>

                                <exec unless:true="${final.exists}" dir="${project.build.directory}/${project.artifactId}/${pkg.tag}" executable="configure" resolveexecutable="true">
                                    <env key="PATH" value="${toolchain.dir}/bin:${env.PATH}" />
                                    <arg value="--cc=gcc --static -I${toolchain.dir}/include" />
                                    <arg value="--ar=ar" />
                                    <arg value="--triplet=x86_64-linux-musl" />
                                    <arg value="--prefix=/usr" />
                                    <arg value="--tccdir=/usr/libexec/tinycc-x86_64-linux-musl" />
                                    <arg value="--extra-cflags=-fno-stack-protector" />
                                    <arg value="--disable-rpath" />
                                    <arg value="--config-musl" />
                                    <arg value="--cross-prefix=x86_64-linux-musl-" />
                                    <arg value="--sysincludepaths=/usr/libexec/tinycc-x86_64-linux-musl/include:/usr/x86_64-linux-musl/include:/usr/include" />
                                    <arg value="--libpaths=/usr/libexec/tinycc-x86_64-linux-musl/lib:/usr/x86_64-linux-musl/lib:/usr/lib" />
                                    <arg value="--crtprefix=/usr/x86_64-linux-musl/lib" />
                                </exec>

                                <exec unless:true="${final.exists}" dir="${project.build.directory}/${project.artifactId}/${pkg.tag}" executable="make">
                                    <env key="PATH" value="${toolchain.dir}/bin:${env.PATH}" />
                                    <arg line="-j 1 V=1" />
                                </exec>
                                <mkdir dir="${root.dir}/usr/bin"/>
                                <mkdir dir="${root.dir}/usr/share/doc/tinycc"/>
                                <mkdir dir="${root.dir}/usr/share/info"/>
                                <mkdir dir="${root.dir}/usr/share/man/man1"/>
                                <mkdir dir="${root.dir}/usr/libexec/tinycc"/>
                                <copy todir="${root.dir}/usr/libexec/tinycc" flatten="true">
                                    <fileset dir="${project.build.directory}/${project.artifactId}/${pkg.tag}">
                                        <include name="bcheck.o"/>
                                        <include name="bt-exe.o"/>
                                        <include name="bt-log.o"/>
                                        <include name="libtcc1.a"/>
                                    </fileset>
                                </copy>
                                <copy todir="${root.dir}/usr/bin" flatten="true">
                                    <fileset dir="${project.build.directory}/${project.artifactId}/${pkg.tag}">
                                        <include name="tcc"/>
                                    </fileset>
                                </copy>
                                <copy todir="${root.dir}/usr/libexec/tinycc/include" flatten="true">
                                    <fileset dir="${project.build.directory}/${project.artifactId}/${pkg.tag}/include">
                                        <include name="*.h"/>
                                    </fileset>
                                    <fileset dir="${project.build.directory}/${project.artifactId}/${pkg.tag}">
                                        <include name="tcclib.h"/>
                                    </fileset>
                                </copy>
                                <copy todir="${root.dir}/usr/share/doc/tinycc" flatten="true">
                                    <fileset dir="${project.build.directory}/${project.artifactId}/${pkg.tag}">
                                        <include name="README"/>
                                        <include name="TODO"/>
                                        <include name="Changelog"/>
                                        <include name="COPYING"/>
                                        <include name="tcc-doc.html"/>
                                    </fileset>
                                </copy>
                                <copy todir="${root.dir}/usr/share/info" flatten="true">
                                    <fileset dir="${project.build.directory}/${project.artifactId}/${pkg.tag}">
                                        <include name="*.info"/>
                                    </fileset>
                                </copy>
                                <copy todir="${root.dir}/usr/share/man/man1" flatten="true">
                                    <fileset dir="${project.build.directory}/${project.artifactId}/${pkg.tag}">
                                        <include name="*.1"/>
                                    </fileset>
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>