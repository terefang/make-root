<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>parent</artifactId>
        <groupId>terefang.makeroot</groupId>
        <version>2021.1.0</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <groupId>terefang.makeroot.muslsys</groupId>
    <artifactId>libssh</artifactId>
    <version>${version.libssh}</version>
    <packaging>pom</packaging>

    <properties>
        <prg.archive>${project.artifactId}-${project.version}.tar.gz</prg.archive>
        <prg.tag>${project.artifactId}-${project.version}</prg.tag>
        <prg.url>https://git.libssh.org/projects/libssh.git/snapshot/stable-${project.version}.tar.gz</prg.url>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <inherited>false</inherited>
                <dependencies>
                    <dependency>
                        <groupId>org.redline-rpm</groupId>
                        <artifactId>redline</artifactId>
                        <version>1.2.9</version>
                        <classifier>jar-with-dependencies</classifier>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-compress</artifactId>
                        <version>1.5</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>ant</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target xmlns:if="ant:if" xmlns:unless="ant:unless">
                                <taskdef classname="org.redline_rpm.ant.RedlineTask" name="xrpm" />
                                <taskdef classname="org.apache.ant.compress.taskdefs.Cpio" name="cpio" />

                                <mkdir dir="${root.dir}/usr/lib"/>
                                <mkdir dir="${root.dir}/usr/include/libssh"/>
                                <mkdir dir="${toolchain.dir}"/>
                                <mkdir dir="${project.basedir}/src/main/dist"/>
                                <mkdir dir="${project.build.directory}/${project.artifactId}/${prg.tag}/build"/>
                                <mkdir dir="${resources.target}"/>

                                <condition property="archive.exists">
                                    <resourceexists>
                                        <file file="${project.basedir}/src/main/dist/${prg.archive}"/>
                                    </resourceexists>
                                </condition>

                                <condition property="final.exists">
                                    <resourceexists>
                                        <file file="${resources.target}/muslsys-${prg.tag}.tgz"/>
                                    </resourceexists>
                                </condition>

                                <exec dir="${toolchain.dir}" executable="tar">
                                    <arg line="-xf ${resources.target}/gcc-10-x86_64-linux-musl-native.tar.gz" />
                                </exec>

                                <exec dir="${toolchain.dir}" executable="tar">
                                    <arg line="-xf ${resources.target}/muslsys-libressl-${version.libressl}-lib.tgz" />
                                </exec>
                                <exec dir="${toolchain.dir}" executable="tar">
                                    <arg line="-xf ${resources.target}/muslsys-zlib-${version.zlib}.tgz" />
                                </exec>

                                <delete >
                                    <fileset dir="${toolchain.dir}" includes="usr/lib/*.la"/>
                                    <fileset dir="${toolchain.dir}" includes="usr/lib/*.so*"/>
                                    <fileset dir="${toolchain.dir}" includes="usr/lib/pkgconfig/*"/>
                                </delete>

                                <get unless:true="${archive.exists}" src="${prg.url}" dest="${project.basedir}/src/main/dist/${prg.archive}"/>

                                <exec dir="${project.build.directory}/${project.artifactId}/${prg.tag}" executable="tar">
                                    <arg line="-xf ${project.basedir}/src/main/dist/${prg.archive} --strip 1" />
                                </exec>

                                <exec dir="${project.build.directory}/${project.artifactId}/${prg.tag}/build" executable="cmake">
                                    <env key="PATH" value="${toolchain.dir}/bin:${env.PATH}" />
                                    <env key="CFLAGS" value="-static --static" />
                                    <env key="CC" value="x86_64-linux-musl-gcc -static --static" />
                                    <env key="CXX" value="x86_64-linux-musl-g++ -static --static" />
                                    <env key="OPENSSL_ROOT_DIR" value="${toolchain.dir}" />
                                    <env key="CFLAGS" value="-I ${toolchain.dir}/include" />
                                    <arg value="-DUNIT_TESTING=OFF" />
                                    <arg value="-DCMAKE_INSTALL_PREFIX=/usr" />
                                    <arg value="-DBUILD_STATIC_LIB=ON" />
                                    <arg value="-DCMAKE_INSTALL_LOCAL_ONLY=ON" />
                                    <arg value=".." />
                                </exec>

                                <exec dir="${project.build.directory}/${project.artifactId}/${prg.tag}/build/src" executable="make">
                                    <env key="PATH" value="${env.PATH}:${toolchain.dir}/bin" />
                                    <arg line="-j 8 ssh_static " />
                                </exec>
                                <copy todir="${root.dir}/usr/lib/">
                                    <fileset dir="${project.build.directory}/${project.artifactId}/${prg.tag}/build/src" includes="*.a"/>
                                </copy>

                                <copy todir="${root.dir}/usr/include/libssh/">
                                    <fileset dir="${project.build.directory}/${project.artifactId}/${prg.tag}/include/libssh">
                                        <include name="callbacks.h"/>
                                        <include name="libssh.h"/>
                                        <include name="ssh2.h"/>
                                        <include name="legacy.h"/>
                                        <include name="libsshpp.hpp"/>
                                        <include name="sftp.h"/>
                                        <include name="server.h"/>
                                    </fileset>
                                </copy>

                                <exec dir="${root.dir}/usr" executable="tar">
                                    <arg line="-cvf ${resources.target}/muslsys-${prg.tag}.tgz include lib" />
                                </exec>

                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>